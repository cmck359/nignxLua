events {}


http{

lua_package_path "/root/lualib/?.lua;;";

    server{
        listen 80;
        server_name 13.54.11.27;

        location = /test {

            content_by_lua_block{

                local aes = require "resty.aes"
                local str = require "resty.string"
                local aes_128_cbc_with_iv = assert(aes:new("1234567890123456",
                    nil, aes.cipher(128,"cbc"), {iv="1234567890123456"}))
                    -- AES 128 CBC with IV and no SALT
                local encrypted = aes_128_cbc_with_iv:encrypt("Really secret message!")
                ngx.say("AES 128 CBC (WITH IV) Encrypted HEX: ", str.to_hex(encrypted))
                ngx.say("AES 128 CBC (WITH IV) Decrypted: ",
                    aes_128_cbc_with_iv:decrypt(encrypted))
                    
            }

        }

        location = /md5 {

            content_by_lua_block{

                local aes = require "resty.aes"
                local str = require "resty.string"
                local b64 = require("resty.core.base64")
                local aes_128_cbc_md5 = aes:new(".{mGPDbUJR$VZ@u-+PfH{MC9gR}i7u=v", nil, aes.cipher(256,"cbc"), {iv="z)6t$Ag.*jP&CPpR"})
                local encrypted = aes_128_cbc_md5:encrypt("Attack at w")
                ngx.say("AES 128 CBC (MD5) Encrypted HEX: ", ngx.encode_base64(encrypted))
                ngx.say("AES 128 CBC (MD5) Decrypted: ", aes_128_cbc_md5:decrypt(encrypted))
                    
            }

        }

        location = /urlparams {
            resolver 1.1.1.1;
            set $my_var '';
            rewrite_by_lua 'local b64 = require("ngx.base64")
                local aes = require "resty.aes"
                local var = ngx.var.arg_url			
                local var2 = ngx.unescape_uri(var)
                local var3 = ngx.decode_base64(var2)
                --ngx.say(var)
                --ngx.say(var2)
                local aes_128_cbc_with_iv = assert(aes:new(".{mGPDbUJR$VZ@u-+PfH{MC9gR}i7u=v", nil, aes.cipher(256,"cbc"), {iv="z)6t$Ag.*jP&CPpR"}))
                --ngx.say(aes_128_cbc_with_iv:decrypt(var3))
                local var4 = aes_128_cbc_with_iv:decrypt(var3)
                ngx.var.my_var = var4';
            proxy_pass $my_var;

        }

        location /foo {
            content_by_lua_block{
		
                local b64 = require("ngx.base64")
                local aes = require "resty.aes"
                local var = ngx.var.arg_url			
                local var2 = ngx.unescape_uri(var)
                var3 = ngx.decode_base64(var2)
                ngx.say(var)
                ngx.say(var2)
                local aes_128_cbc_with_iv = assert(aes:new(".{mGPDbUJR$VZ@u-+PfH{MC9gR}i7u=v", nil, aes.cipher(256,"cbc"), {iv="z)6t$Ag.*jP&CPpR"}))
                ngx.say(aes_128_cbc_with_iv:decrypt(var3))
                ngx.var.my_var = var3

            }
        }

        location /bar {
            resolver 1.1.1.1;
            set $proxy "";
            rewrite_by_lua '
                ngx.var.proxy = "via.placeholder.com/150"
            ';
            proxy_pass http://$proxy;
        }

    }
}
